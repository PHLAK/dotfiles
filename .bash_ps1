source ${HOME}/.bash_formatting
source /usr/share/git/git-prompt.sh

# Show git dirty state (*/+) in PS1
export GIT_PS1_SHOWDIRTYSTATE=1

# Set function to generate PS1
export PROMPT_COMMAND=generatePS1

function generatePS1() {
    # Set prompt color based on previous command exit code (NOTE: Must be first)
    local PROMPT_COLOR="$([[ ${PIPESTATUS[-1]} == 0 ]] && echo ${FG_BLACK} || echo ${FG_RED})"

    PS1="☕"                                  # EMOJI
    PS1+=" ${BOLD}"                          # <space>
    PS1+="${FG_GREEN}\u"                     # USER
    PS1+="${FG_BLACK}@"                      # AT SIGN
    PS1+="$(hostColor)\h"                    # HOST
    PS1+="${RESET_FORMAT} "                  # <space>
    PS1+="${FG_CYAN}$(dockerIndicator)"      # DOCKER INDICATOR
    PS1+="${FG_MAGENTA}$(workingDirectory)"  # WORKING DIRECTORY
    PS1+="\n"                                # <new line>
    PS1+="${FG_CYAN}\D{%b %d • %I:%M %p}"    # TIMESTAMP
    PS1+=" "                                 # <space>
    PS1+="${FG_YELLOW}$(__git_ps1 '(%s) ')"  # GIT PS1
    PS1+="${BOLD}${PROMPT_COLOR}\$"          # PROMPT
    PS1+="${RESET_FORMAT} "                  # <space>
}

function hostColor() {
    [[ -n "${SSH_CLIENT}" ]] && echo ${FG_RED} || echo ${FG_BLUE}
}

function workingDirectory() {
    if [[ ${PWD} = ${HOME}/workspace/* ]] && git rev-parse --is-inside-work-tree &>/dev/null; then
        echo "${PWD#${HOME}/workspace/*/}"
    else
        echo "$(dirs)"
    fi
}

function dockerIndicator() {
    if [[ -f "docker-composer.yml" ]] || [[ -f "docker-compose.yaml" ]]; then
        [[ -n "$(docker-compose ps --quiet --filter 'status=running')" ]] && echo "⬢ " || echo "⬡ "
    fi
}
